<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8" />
  <title>BBCode editor</title>
  <style>
    html, body {
      height: 100%;
      margin: 0; padding: 0;
      background: #222;
      color: #eee;
      font-family: Arial, sans-serif;
      width: 100vw;
      min-height: 100vh;
    }
    body {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      text-align: center;
    }
    #container {
      width: 900px;
      max-width: 95vw;
      margin: 0 auto;
    }
    table {
      margin: 30px auto 20px auto;
      border-collapse: collapse;
      background: #333;
      box-shadow: 0 2px 8px #000;
      width: 100%;
    }
    td { padding: 8px; }
    #input {
      width: 100%;
      min-height: 120px;
      background: #444;
      color: #eee;
      border: 1px solid #555;
      font-family: monospace;
      font-size: 1em;
      box-sizing: border-box;
      resize: vertical;
    }
    #preview {
      width: 100%;
      min-height: 120px;
      border: 1px solid #555;
      background: #333;
      padding: 8px;
      box-sizing: border-box;
      text-align: center;
      white-space: pre-wrap;
      margin: 0 auto;
    }
    .btn {
      margin: 2px;
      padding: 4px 10px;
      border: 1px solid #666;
      background: #555;
      color: #eee;
      cursor: pointer;
    }
    .btn:hover { background: #666; }
    select {
      margin: 2px;
      padding: 4px;
      background: #555;
      color: #eee;
      border: 1px solid #666;
    }
    select option { background: #333; }
    .bg-block {
      display: block;
      width: 100%;
      padding: 8px;
      margin-bottom: 0;
      border-radius: 0;
      box-sizing: border-box;
      text-align: center;
    }
    .bg-block > div {
      background: transparent !important;
      color: inherit !important;
      text-align: center;
    }
    /* Tvary */
    .shape-wrap {
      display: inline-block;
      position: relative;
      vertical-align: middle;
      margin: 12px 12px 0 0;
      text-align: left; /* tvar vlevo */
    }
    .shape-bg {
      position: absolute;
      left: 0; top: 0;
      z-index: 0;
      opacity: 0.6;
      pointer-events: none;
      width: 100%; height: 100%;
    }
    .shape-content {
      position: relative;
      z-index: 1;
      width: 100%; height: 100%;
      box-sizing: border-box;
      text-align: center;
      word-break: break-word;
      pointer-events: auto;
      display: block;
      padding: 15px 5px 0 5px;
    }
    .shape-square .shape-bg { border-radius: 8px; }
    .shape-rectangle .shape-bg { border-radius: 12px; }
    .shape-circle .shape-bg { border-radius: 50%; }
    .shape-ellipse .shape-bg { border-radius: 50%; }
    .shape-triangle .shape-content {
      width: 100% !important; height: 100% !important;
      display: block;
      text-align: center;
      padding: 15px 5px 0 5px;
    }
  </style>
</head>
<body>
  <div id="container">
    <table>
      <tr><td colspan="2"><b>BBCode editor</b></td></tr>
      <tr>
        <td>
          <select id="backgroundPreset" onchange="insertBackgroundPreset()">
            <option value="">Pozadí…</option>
            <option value="black">Černé</option>
            <option value="red">Červené</option>
            <option value="blue">Modré</option>
            <option value="green">Zelené</option>
            <option value="orange">Oranžové</option>
            <option value="purple">Fialové</option>
            <option value="gray">Šedé</option>
            <option value="yellow">Žluté</option>
            <option value="cyan">Tyrkysové</option>
            <option value="pink">Růžové</option>
            <option value="lime">Limetkové</option>
            <option value="navy">Tmavě modré</option>
            <option value="maroon">Kaštanové</option>
            <option value="pro">Vlastní (zadej #hex, rgba nebo slovní barvu)</option>
          </select>
          <button class="btn" onclick="insertTag('b')">Tučné</button>
          <button class="btn" onclick="insertTag('i')">Kurzíva</button>
          <button class="btn" onclick="insertTag('u')">Podtržené</button>
          <select id="fontPreset" onchange="insertFontPreset()">
            <option value="">Písmo…</option>
            <option value="Arial, sans-serif">Arial</option>
            <option value="Verdana, sans-serif">Verdana</option>
            <option value="Tahoma, sans-serif">Tahoma</option>
            <option value="Trebuchet MS, sans-serif">Trebuchet MS</option>
            <option value="Times New Roman, serif">Times New Roman</option>
            <option value="Georgia, serif">Georgia</option>
            <option value="Garamond, serif">Garamond</option>
            <option value="Courier New, monospace">Courier New</option>
            <option value="Brush Script MT, cursive">Brush Script MT</option>
            <option value="Roboto, sans-serif">Roboto</option>
          </select>
          <select id="fontSizePreset" onchange="insertFontSizePreset()">
            <option value="">Velikost…</option>
            <option value="small">Malé</option>
            <option value="medium">Střední</option>
            <option value="large">Velké</option>
            <option value="xlarge">Extra velké</option>
            <option value="xxlarge">XXL</option>
            <option value="pro">Vlastní…</option>
          </select>
          <select id="colorPreset" onchange="insertColorPreset()">
            <option value="">Barva písma…</option>
            <option value="color=black">Černá</option>
            <option value="color=red">Červená</option>
            <option value="color=blue">Modrá</option>
            <option value="color=green">Zelená</option>
            <option value="color=orange">Oranžová</option>
            <option value="color=purple">Fialová</option>
            <option value="color=gray">Šedá</option>
            <option value="color=yellow">Žlutá</option>
            <option value="color=cyan">Tyrkysová</option>
            <option value="color=pink">Růžová</option>
          </select>
          <select id="shadowPreset" onchange="insertShadowPreset()">
            <option value="">Stín písma…</option>
            <option value="fontshadow=black-soft">Jemný černý</option>
            <option value="fontshadow=black-strong">Silný černý</option>
            <option value="fontshadow=white-soft">Jemný bílý</option>
            <option value="fontshadow=blue-soft">Jemný modrý</option>
            <option value="fontshadow=red-strong">Silný červený</option>
            <option value="fontshadow=gray-blur">Rozmazaný šedý</option>
            <option value="fontshadow=yellow-glow">Jemný žlutý</option>
            <option value="fontshadow=green-glow">Jemný zelený</option>
            <option value="fontshadow=orange-soft">Jemný oranžový</option>
            <option value="fontshadow=purple-glow">Jemný fialový</option>
            <option value="fontshadow=cyan-soft">Jemný tyrkysový</option>
            <option value="fontshadow=pink-glow">Jemný růžový</option>
            <option value="fontshadow=lime-soft">Jemný limetkový</option>
            <option value="fontshadow=navy-strong">Silný tmavě modrý</option>
            <option value="fontshadow=gray-strong">Silný šedý</option>
            <option value="profi1">Profi styl 1 (jednoduchý)</option>
            <option value="profi2">Profi styl 2 (více stínů)</option>
          </select>
          <select id="shapePreset" onchange="insertShapePreset()">
            <option value="">Tvar…</option>
            <option value="square">Čtverec (120x50 green)</option>
            <option value="rectangle">Obdélník (200x60 blue)</option>
            <option value="circle">Kruh (60x60 red)</option>
            <option value="ellipse">Elipsa (100x60 orange)</option>
            <option value="triangle">Trojúhelník (60x60 yellow)</option>
            <option value="profi">Profi styl 1(ručně)</option>
            <option value="profi2">Profi styl 2(ručně)</option>
          </select>
        </td>
      </tr>
      <tr>
        <td colspan="2">
          <textarea id="input" placeholder="Sem piš BBCode..." oninput="showPreview()"></textarea>
        </td>
      </tr>
    </table>
    <div id="preview"></div>
  </div>
<script>
const shadowPresets = {
  "fontshadow=black-soft":    "1px 1px 3px black",
  "fontshadow=black-strong":  "2px 2px 8px black",
  "fontshadow=white-soft":    "1px 1px 4px white",
  "fontshadow=blue-soft":     "1px 1px 6px blue",
  "fontshadow=red-strong":    "2px 2px 8px red",
  "fontshadow=gray-blur":     "0 0 10px gray",
  "fontshadow=yellow-glow":   "0 0 10px yellow",
  "fontshadow=green-glow":    "0 0 10px green",
  "fontshadow=orange-soft":   "1px 1px 6px orange",
  "fontshadow=purple-glow":   "0 0 10px purple",
  "fontshadow=cyan-soft":     "1px 1px 6px cyan",
  "fontshadow=pink-glow":     "0 0 10px pink",
  "fontshadow=lime-soft":     "1px 1px 6px lime",
  "fontshadow=navy-strong":   "2px 2px 8px navy",
  "fontshadow=gray-strong":   "2px 2px 8px gray",
  "profi1":                   "2px 2px 6px black",
  "profi2":                   "0 1px 2px rgba(0,0,0,0.2), 1px 2px 5px #000, 2px 3px 7px red"
};

function validColor(c) {
  if (/^#[0-9a-fA-F]{3}$/.test(c)) {
    return '#' + c[1] + c[1] + c[2] + c[2] + c[3] + c[3];
  }
  if (/^#[0-9a-fA-F]{6}$/.test(c)) return c;
  if (/^rgba?\(/.test(c)) return c;
  if (/^[a-zA-Z]{3,20}$/.test(c)) return c.toLowerCase();
  return '#fff';
}

function bbcodeToHTML(bbcode) {
  function parseBB(str, tagStack=[]) {
    let out = '', pos = 0;
    while (pos < str.length) {
      let open = str.indexOf('[', pos);
      if (open === -1) {
        out += applyStyle(str.substring(pos), tagStack);
        break;
      }
      out += applyStyle(str.substring(pos, open), tagStack);
      let close = str.indexOf(']', open);
      if (close === -1) {
        out += applyStyle(str.substring(open), tagStack);
        break;
      }
      let tag = str.substring(open + 1, close);
      let endTag = tag.startsWith('/');
      let tagName = endTag ? tag.substring(1) : tag.split('=')[0];
      let tagValue = tag.includes('=') ? tag.split('=').slice(1).join('=') : '';

      if (!endTag && tagName === 'shape') {
        let match = tag.match(/^shape=(square|rectangle|circle|ellipse|triangle)\s+(\d+)\s+(\d+)\s+([^\]\s]+)$/i);
        if (match) {
          let type = match[1], w = match[2], h = match[3], color = match[4];
          let closeTag = '[/shape]';
          let contentStart = close + 1;
          let contentEnd = findClosing(str, contentStart, 'shape');
          if (contentEnd === -1) { out += applyStyle(str.substring(open, close+1), tagStack); pos = close+1; continue; }
          let inner = str.substring(contentStart, contentEnd);
          out += renderShape(type, w, h, color, parseBB(inner, tagStack));
          pos = contentEnd + closeTag.length;
          continue;
        }
      }

      if (!endTag) {
        let newStack = tagStack.slice();
        if (tagName === 'color') newStack.push({type:'color',value:tagValue});
        else if (tagName === 'fontshadow') newStack.push({type:'fontshadow',value:shadowPresets[`fontshadow=${tagValue}`]||tagValue});
        else if (tagName === 'b' || tagName === 'i' || tagName === 'u') newStack.push({type:tagName});
        else if (tagName === 'font') newStack.push({type:'font',value:tagValue});
        else if (tagName === 'fontsize' || tagName === 'size') newStack.push({type:'fontsize',value:tagValue});
        else if (tagName === 'center') newStack.push({type:'center'});
        else if (tagName === 'left') newStack.push({type:'left'});
        else if (tagName === 'right') newStack.push({type:'right'});
        let nextClose = str.indexOf(`[/${tagName}]`, close+1);
        if (nextClose === -1) { out += applyStyle(str.substring(open, close+1), tagStack); pos = close+1; continue; }
        let inner = str.substring(close+1, nextClose);
        let innerHTML = parseBB(inner, newStack);
        if (tagName === 'center') out += `<div style="text-align:center">${innerHTML}</div>`;
        else if (tagName === 'left') out += `<div style="text-align:left">${innerHTML}</div>`;
        else if (tagName === 'right') out += `<div style="text-align:right">${innerHTML}</div>`;
        else out += innerHTML;
        pos = nextClose + tagName.length + 3;
      } else {
        pos = close + 1;
      }
    }
    return out;
  }
  function findClosing(str, from, type) {
    let openTag = `[${type}`;
    let closeTag = `[/${type}]`;
    let depth = 1, pos = from;
    while (depth > 0) {
      let nextOpen = str.indexOf(openTag, pos);
      let nextClose = str.indexOf(closeTag, pos);
      if (nextClose === -1) return -1;
      if (nextOpen !== -1 && nextOpen < nextClose) { depth++; pos = nextOpen + openTag.length; }
      else { depth--; if (depth===0) return nextClose; pos = nextClose + closeTag.length; }
    }
    return -1;
  }
  function applyStyle(text, stack) {
    if (!text) return '';
    text = text.replace(/ /g, '&nbsp;').replace(/\n/g, '<br>');
    let style = '';
    let align = '';
    for (let tag of stack) {
      if (tag.type === 'color') style += `color:${tag.value};`;
      if (tag.type === 'fontshadow') style += `text-shadow:${tag.value};`;
      if (tag.type === 'b') style += 'font-weight:bold;';
      if (tag.type === 'i') style += 'font-style:italic;';
      if (tag.type === 'u') style += 'text-decoration:underline;';
      if (tag.type === 'font') style += `font-family:${tag.value};`;
      if (tag.type === 'fontsize') style += `font-size:${tag.value};`;
      if (tag.type === 'center') align = 'center';
      if (tag.type === 'left') align = 'left';
      if (tag.type === 'right') align = 'right';
    }
    if (style) text = `<span style="${style}">${text}</span>`;
    if (align) text = `<div style="text-align:${align}">${text}</div>`;
    return text;
  }
  function renderShape(type, w, h, color, content) {
    w = parseInt(w); h = parseInt(h);
    let shapeClass = `shape-wrap shape-${type}`;
    let contentStyle = `width:${w}px;height:${h}px;`;
    color = validColor(color);
    if (type === 'triangle') {
      let triangleStyle = `
        width: 0 !important;
        height: 0 !important;
        border-left: ${w/2}px solid transparent;
        border-right: ${w/2}px solid transparent;
        border-bottom: ${h}px solid ${color};
        left: 0; top: 0;
        border-radius: 0;
        opacity: 0.7;
        position: absolute;
        pointer-events: none;
      `;
      return `<span class="${shapeClass}" style="width:${w}px;height:${h}px;position:relative;text-align:left;">
        <span class="shape-bg" style="${triangleStyle}"></span>
        <span class="shape-content" style="${contentStyle}">${content}</span>
      </span>`;
    } else {
      let bgStyle = `background:${color};width:${w}px;height:${h}px;`;
      return `<span class="${shapeClass}" style="width:${w}px;height:${h}px;text-align:left;">
        <span class="shape-bg" style="${bgStyle}"></span>
        <span class="shape-content" style="${contentStyle}">${content}</span>
      </span>`;
    }
  }
  return parseBB(bbcode);
}

function insertTag(tag) {
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);
  let openTag = `[${tag}]`;
  let closeTag = `[/${tag.split('=')[0]}]`;
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
}

function insertFontPreset() {
  let preset = document.getElementById('fontPreset').value;
  if (!preset) return;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);
  let openTag = '[font=' + preset + ']';
  let closeTag = '[/font]';
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('fontPreset').selectedIndex = 0;
}

function insertFontSizePreset() {
  let preset = document.getElementById('fontSizePreset').value;
  if (!preset) return;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);

  let openTag = '';
  if (preset === "pro") {
    let size = prompt("Zadej velikost písma (např. 14px, 1.2em, 120%):", "14px");
    if (!size) return;
    openTag = `[fontsize=${size}]`;
  } else {
    let sizeMap = {
      "small": "12px",
      "medium": "16px",
      "large": "20px",
      "xlarge": "24px",
      "xxlarge": "32px"
    };
    openTag = `[fontsize=${sizeMap[preset]}]`;
  }
  let closeTag = `[/fontsize]`;
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('fontSizePreset').selectedIndex = 0;
}

function insertColorPreset() {
  let preset = document.getElementById('colorPreset').value;
  if (!preset) return;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);
  let openTag = `[${preset}]`;
  let closeTag = `[/${preset.split('=')[0]}]`;
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('colorPreset').selectedIndex = 0;
}

function insertBackgroundPreset() {
  let preset = document.getElementById('backgroundPreset').value;
  if (!preset) return;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);

  let openTag = '';
  if (preset === "pro") {
    let color = prompt("Zadej barvu pozadí (např. #123456, rgb(100,200,50), rgba(100,200,50,0.5)):", "#");
    if (!color) return;
    openTag = `[background=${color}]`;
  } else {
    openTag = `[background=${preset}]`;
  }
  textarea.value = before + openTag + selected + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('backgroundPreset').selectedIndex = 0;
}

function insertShadowPreset() {
  let preset = document.getElementById('shadowPreset').value;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);

  let openTag = '';
  let closeTag = '';
  if (preset === "profi1") {
    openTag = `[fontshadow=2px 2px 6px black]`;
    closeTag = `[/fontshadow]`;
  } else if (preset === "profi2") {
    openTag = `[fontshadow=0 1px 2px rgba(0,0,0,0.2), 1px 2px 5px #000, 2px 3px 7px red]`;
    closeTag = `[/fontshadow]`;
  } else if (preset) {
    openTag = `[${preset}]`;
    closeTag = `[/${preset.split('=')[0]}]`;
  } else {
    return;
  }
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('shadowPreset').selectedIndex = 0;
}

function insertShapePreset() {
  let preset = document.getElementById('shapePreset').value;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);

  let bbcode = '';
  if (!preset) return;
  if (preset === "square") {
    bbcode = '[shape=square 120 50 green]Text ve čtverci[/shape]';
  } else if (preset === "rectangle") {
    bbcode = '[shape=rectangle 200 60 blue]Text v obdélníku[/shape]';
  } else if (preset === "circle") {
    bbcode = '[shape=circle 60 60 red]Text v kruhu[/shape]';
  } else if (preset === "ellipse") {
    bbcode = '[shape=ellipse 100 60 orange]Text v elipse[/shape]';
  } else if (preset === "triangle") {
    bbcode = '[shape=triangle 60 60 yellow]Text v trojúhelníku[/shape]';
  } else if (preset === "profi") {
    bbcode = '[shape=square 150 60 #000000]Vlastní tvar[/shape]';
  } else if (preset === "profi2") {
    bbcode = '[shape=square 150 60 rgba(0,0,0,.5)]Vlastní tvar[/shape]';
  }
  textarea.value = before + bbcode + after;
  textarea.focus();
  textarea.selectionStart = textarea.selectionEnd = before.length + bbcode.length;
  showPreview();
  document.getElementById('shapePreset').selectedIndex = 0;
}

function showPreview() {
  let bbcode = document.getElementById('input').value;

  // Rozdělíme na bloky podle background
  let reBg = /\[background=([^\]]+)\]([\s\S]*?)(?=(?:\[background=)|$)/gi;
  let result = '';
  let lastIndex = 0;
  let m;
  let found = false;
  while ((m = reBg.exec(bbcode)) !== null) {
    found = true;
    let bg = m[1];
    let content = m[2];
    result += renderBBBlock(content, bg);
    lastIndex = reBg.lastIndex;
  }
  if (!found) {
    // žádné background, vše jako jeden blok
    result = renderBBBlock(bbcode, '#333');
  } else if (lastIndex < bbcode.length) {
    result += renderBBBlock(bbcode.substr(lastIndex), '#333');
  }

  document.getElementById('preview').innerHTML = result;
}

function renderBBBlock(bbcode, bg) {
  let html = `<div class="bg-block" style="background:${bg}"><div>`;
  html += bbcodeToHTML(bbcode);
  html += `</div></div>`;
  return html;
}

showPreview();
</script>
</body>
</html>
