<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8">
  <title>BBCode editor – bloky pozadí bez vlivu na písmo</title>
  <style>
    body { font-family: Arial, sans-serif; background: #222; color: #eee; }
    table { margin: 30px auto; border-collapse: collapse; background: #333; box-shadow: 0 2px 8px #000; }
    td { padding: 8px; }
    #input { width: 95%; min-height: 60px; background: #444; color: #eee; border: 1px solid #555; }
    #preview { width: 95%; min-height: 60px; border: 1px solid #555; background: #333; margin: 10px auto; padding: 8px; }
    .btn { margin: 2px; padding: 4px 10px; border: 1px solid #666; background: #555; color: #eee; cursor: pointer; }
    .btn:hover { background: #666; }
    select { margin: 2px; padding: 4px; background: #555; color: #eee; border: 1px solid #666; }
    select option { background: #333; }
    .bg-block { display: block; width: 100%; padding: 8px; margin-bottom: 0; border-radius: 0; box-sizing: border-box; }
    .bg-block > div { background: transparent !important; color: inherit !important; }
  </style>
</head>
<body>
  <table>
    <tr>
      <td colspan="2"><b>BBCode editor – bloky pozadí bez vlivu na písmo</b></td>
    </tr>
    <tr>
      <td>
        <button class="btn" onclick="insertTag('b')">Tučné</button>
        <button class="btn" onclick="insertTag('i')">Kurzíva</button>
        <button class="btn" onclick="insertTag('u')">Podtržené</button>
        <select id="backgroundPreset" onchange="insertBackgroundPreset()">
          <option value="">Vyber pozadí…</option>
          <option value="black">Černé</option>
          <option value="red">Červené</option>
          <option value="blue">Modré</option>
          <option value="green">Zelené</option>
          <option value="orange">Oranžové</option>
          <option value="purple">Fialové</option>
          <option value="gray">Šedé</option>
          <option value="yellow">Žluté</option>
          <option value="cyan">Tyrkysové</option>
          <option value="pink">Růžové</option>
          <option value="lime">Limetkové</option>
          <option value="navy">Tmavě modré</option>
          <option value="maroon">Kaštanové</option>
          <option value="pro">Vlastní (zadej #hex, rgba…)</option>
        </select>
        <select id="colorPreset" onchange="insertColorPreset()">
          <option value="">Vyber barvu písma…</option>
          <option value="color=black">Černá</option>
          <option value="color=red">Červená</option>
          <option value="color=blue">Modrá</option>
          <option value="color=green">Zelená</option>
          <option value="color=orange">Oranžová</option>
          <option value="color=purple">Fialová</option>
          <option value="color=gray">Šedá</option>
          <option value="color=yellow">Žlutá</option>
          <option value="color=cyan">Tyrkysová</option>
          <option value="color=pink">Růžová</option>
        </select>
        <select id="shadowPreset" onchange="insertShadowPreset()">
          <option value="">Vyber stín písma…</option>
          <option value="fontshadow=black-soft">Jemný černý</option>
          <option value="fontshadow=black-strong">Silný černý</option>
          <option value="fontshadow=white-soft">Jemný bílý</option>
          <option value="fontshadow=blue-soft">Jemný modrý</option>
          <option value="fontshadow=red-strong">Silný červený</option>
          <option value="fontshadow=gray-blur">Rozmazaný šedý</option>
          <option value="fontshadow=yellow-glow">Jemný žlutý</option>
          <option value="fontshadow=green-glow">Jemný zelený</option>
          <option value="fontshadow=orange-soft">Jemný oranžový</option>
          <option value="fontshadow=purple-glow">Jemný fialový</option>
          <option value="fontshadow=cyan-soft">Jemný tyrkysový</option>
          <option value="fontshadow=pink-glow">Jemný růžový</option>
          <option value="fontshadow=lime-soft">Jemný limetkový</option>
          <option value="fontshadow=navy-strong">Silný tmavě modrý</option>
          <option value="fontshadow=gray-strong">Silný šedý</option>
          <option value="profi1">Profi styl 1 (jednoduchý)</option>
          <option value="profi2">Profi styl 2 (více stínů)</option>
        </select>
      </td>
    </tr>
    <tr>
      <td colspan="2">
        <textarea id="input" placeholder="Sem piš BBCode..." oninput="showPreview()"></textarea>
      </td>
    </tr>
  </table>
  <div id="preview"></div>

<script>
const shadowPresets = {
  "fontshadow=black-soft":    "1px 1px 3px black",
  "fontshadow=black-strong":  "2px 2px 8px black",
  "fontshadow=white-soft":    "1px 1px 4px white",
  "fontshadow=blue-soft":     "1px 1px 6px blue",
  "fontshadow=red-strong":    "2px 2px 8px red",
  "fontshadow=gray-blur":     "0 0 10px gray",
  "fontshadow=yellow-glow":   "0 0 10px yellow",
  "fontshadow=green-glow":    "0 0 10px green",
  "fontshadow=orange-soft":   "1px 1px 6px orange",
  "fontshadow=purple-glow":   "0 0 10px purple",
  "fontshadow=cyan-soft":     "1px 1px 6px cyan",
  "fontshadow=pink-glow":     "0 0 10px pink",
  "fontshadow=lime-soft":     "1px 1px 6px lime",
  "fontshadow=navy-strong":   "2px 2px 8px navy",
  "fontshadow=gray-strong":   "2px 2px 8px gray",
  "profi1":                   "2px 2px 6px black",
  "profi2":                   "0 1px 2px rgba(0,0,0,0.2), 1px 2px 5px #000, 2px 3px 7px red"
};

function bbcodeToHTML(bbcode) {
  let result = '';
  let tagStack = [];
  let pos = 0;

  function getCurrentStyle() {
    let style = {};
    style.color = tagStack.filter(x => x.type === 'color').pop()?.value || '';
    style.fontshadow = tagStack.filter(x => x.type === 'fontshadow').pop()?.value || '';
    style.bold = tagStack.some(x => x.type === 'b');
    style.italic = tagStack.some(x => x.type === 'i');
    style.underline = tagStack.some(x => x.type === 'u');
    return style;
  }

  function applyStyle(text, style) {
    if (!text) return text;
    let styleStr = '';
    if (style.color) styleStr += `color:${style.color};`;
    if (style.fontshadow) styleStr += `text-shadow:${style.fontshadow};`;
    if (style.bold) styleStr += 'font-weight:bold;';
    if (style.italic) styleStr += 'font-style:italic;';
    if (style.underline) styleStr += 'text-decoration:underline;';
    return styleStr ? `<span style="${styleStr}">${text}</span>` : text;
  }

  while (pos < bbcode.length) {
    let openTag = bbcode.indexOf('[', pos);
    if (openTag === -1) {
      result += applyStyle(bbcode.substring(pos), getCurrentStyle());
      break;
    }
    result += applyStyle(bbcode.substring(pos, openTag), getCurrentStyle());
    pos = openTag;
    let closeTag = bbcode.indexOf(']', pos);
    if (closeTag === -1) {
      result += applyStyle(bbcode.substring(pos), getCurrentStyle());
      break;
    }
    let tag = bbcode.substring(openTag + 1, closeTag);
    pos = closeTag + 1;

    if (!tag.startsWith('/')) {
      let parts = tag.split('=');
      let tagName = parts[0];
      let value = parts[1] || '';
      if (tagName === 'color') {
        tagStack.push({ type: 'color', value: value });
      } else if (tagName === 'fontshadow') {
        tagStack.push({ type: 'fontshadow', value: shadowPresets[`fontshadow=${value}`] || value });
      } else if (tagName === 'b' || tagName === 'i' || tagName === 'u') {
        tagStack.push({ type: tagName });
      }
    } else {
      let tagName = tag.substring(1);
      for (let i = tagStack.length - 1; i >= 0; i--) {
        if (tagStack[i].type === tagName) {
          tagStack.splice(i, 1);
          break;
        }
      }
    }
  }

  // Odstranění všech zbylých BBCode tagů (i neuzavřených a koncovek)
  result = result.replace(/\[\/?[a-z][^\]]*\]/gi, '');
  // Nové řádky
  result = result.replace(/\n/g, '<br>');
  return result;
}

function insertTag(tag) {
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);
  let openTag = `[${tag}]`;
  let closeTag = `[/${tag.split('=')[0]}]`;
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
}

function insertColorPreset() {
  let preset = document.getElementById('colorPreset').value;
  if (!preset) return;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);
  let openTag = `[${preset}]`;
  let closeTag = `[/${preset.split('=')[0]}]`;
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('colorPreset').selectedIndex = 0;
}

function insertBackgroundPreset() {
  let preset = document.getElementById('backgroundPreset').value;
  if (!preset) return;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);

  let openTag = '';
  if (preset === "pro") {
    let color = prompt("Zadej barvu pozadí (např. #123456, rgb(100,200,50), rgba(100,200,50,0.5)):", "#");
    if (!color) return;
    openTag = `[background=${color}]`;
  } else {
    openTag = `[background=${preset}]`;
  }
  textarea.value = before + openTag + selected + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  tarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('backgroundPreset').selectedIndex = 0;
}

function insertShadowPreset() {
  let preset = document.getElementById('shadowPreset').value;
  let textarea = document.getElementById('input');
  let start = textarea.selectionStart;
  let end = textarea.selectionEnd;
  let selected = textarea.value.substring(start, end);
  let before = textarea.value.substring(0, start);
  let after = textarea.value.substring(end);

  let openTag = '';
  let closeTag = '';
  if (preset === "profi1") {
    openTag = `[fontshadow=2px 2px 6px black]`;
    closeTag = `[/fontshadow]`;
  } else if (preset === "profi2") {
    openTag = `[fontshadow=0 1px 2px rgba(0,0,0,0.2), 1px 2px 5px #000, 2px 3px 7px red]`;
    closeTag = `[/fontshadow]`;
  } else if (preset) {
    openTag = `[${preset}]`;
    closeTag = `[/${preset.split('=')[0]}]`;
  } else {
    return;
  }
  textarea.value = before + openTag + selected + closeTag + after;
  textarea.focus();
  textarea.selectionStart = start + openTag.length;
  textarea.selectionEnd = end + openTag.length;
  showPreview();
  document.getElementById('shadowPreset').selectedIndex = 0;
}

function showPreview() {
  let bbcode = document.getElementById('input').value;
  let sections = [];
  let currentBg = '#333';
  let currentText = '';
  // rozděl podle background tagů
  let parts = bbcode.split(/(\[background=[^\]]+\])/gi);
  // první část je vždy před prvním tagem (pokud je)
  if (parts.length > 0 && !parts[0].includes('background=')) {
    sections.push({ bg: currentBg, text: parts[0] });
  }
  // pro každý tag a následující text
  for (let i = 1; i < parts.length; i++) {
    // liché indexy jsou tagy, sudé jsou texty
    if (i % 2 === 1) {
      let tag = parts[i];
      let color = tag.match(/background=([^\]]+)/i);
      if (color && color[1]) {
        currentBg = color[1];
      }
      // další část je text
      let text = parts[i+1] || '';
      sections.push({ bg: currentBg, text: text });
      i++; // přeskoč text
    }
  }

  let preview = document.getElementById('preview');
  preview.innerHTML = '';
  for (let section of sections) {
    let bgBlock = document.createElement('div');
    bgBlock.className = 'bg-block';
    bgBlock.style.background = section.bg;
    // převod BBCode na HTML (bez background tagů)
    let html = bbcodeToHTML(section.text);
    bgBlock.innerHTML = `<div>${html}</div>`;
    preview.appendChild(bgBlock);
  }
}

// Prvotní náhled
showPreview();
</script>
</body>
</html>
